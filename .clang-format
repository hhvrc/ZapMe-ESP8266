---
# Default style for all languages
IndentWidth: 2
---
Language: Cpp
Standard: c++17
DisableFormat: false

TabWidth: 2
UseTab: Never
IndentWidth: 2
ColumnLimit: 128
ShortNamespaceLines: 2
AccessModifierOffset: -2
ContinuationIndentWidth: 2
ConstructorInitializerIndentWidth: 2
BracedInitializerIndentWidth: 2
CommentPragmas: "^ IWYU pragma:"
LineEnding: LF

IncludeBlocks: Regroup
SortIncludes: CaseInsensitive
# IncludeCategories:
#   - Regex: '^"(llvm|llvm-c|clang|clang-c)/'
#     Priority: 2
#     SortPriority: 2
#     CaseSensitive: true
#   - Regex: '^((<|")(gtest|gmock|isl|json)/)'
#     Priority: 3
#   - Regex: "<[[:alnum:].]+>"
#     Priority: 4
#   - Regex: ".*"
#     Priority: 1
#     SortPriority: 0
# IncludeIsMainRegex: "([-_](test|unittest))?$"
# IncludeIsMainSourceRegex: ""

AlignAfterOpenBracket: Align
AlignArrayOfStructures: Right
AlignConsecutiveAssignments:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: false
  PadOperators: true
AlignConsecutiveBitFields:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: true
  PadOperators: true
AlignConsecutiveDeclarations:
  Enabled: false
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: true
  PadOperators: true
AlignConsecutiveMacros:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: true
  PadOperators: true
AlignEscapedNewlines: Left
AlignOperands: AlignAfterOperator
AlignTrailingComments:
  Kind: Always
  OverEmptyLines: 1
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: Always
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: true
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: false
BinPackParameters: false
BitFieldColonSpacing: Both
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: false
  AfterControlStatement: MultiLine
  AfterEnum: false
  AfterFunction: false
  AfterNamespace: false
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: false
  BeforeCatch: true
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: true
  SplitEmptyNamespace: true
BreakAfterAttributes: Never
BreakBeforeBinaryOperators: All
BreakBeforeConceptDeclarations: Allowed
BreakBeforeInlineASMColon: Always
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma
BreakStringLiterals: true
CompactNamespaces: false
Cpp11BracedListStyle: true
DerivePointerAlignment: false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: LogicalBlock
FixNamespaceComments: true
IndentAccessModifiers: false
IndentCaseBlocks: true
IndentCaseLabels: true
IndentExternBlock: NoIndent
IndentGotoLabels: false
IndentPPDirectives: None
IndentRequiresClause: false
IndentWrappedFunctionNames: true
InsertNewlineAtEOF: true
InsertTrailingCommas: Wrapped
IntegerLiteralSeparator:
  Binary: 4
  BinaryMinDigits: 9
  Decimal: 3
  DecimalMinDigits: 5
  Hex: 2
  HexMinDigits: 9
KeepEmptyLinesAtEOF: false
KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: Signature
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
PPIndentWidth: -1
PackConstructorInitializers: NextLine

PointerAlignment: Left
ReferenceAlignment: Left

RawStringFormats:
  - Language: Cpp
    Delimiters:
      - 'cc'
      - 'cpp'
    BasedOnStyle: google
    CanonicalDelimiter: 'cc'
ReflowComments: true
RequiresClausePosition: OwnLine
RequiresExpressionIndentation: OuterScope
SeparateDefinitionBlocks: Always
SortUsingDeclarations: LexicographicNumeric
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: false
  AfterFunctionDeclationName: false
  AfterIfMacros: false
  AfterOverloadedOperator: false
  AfterRequiresInClause: false
  AfterRequiresInExpression: false
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: true
SpacesBeforeTrailingComments: 2
SpacesInAngles: Never
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: -1
SpacesInParens: Custom
SpacesInParensOptions:
  InConditionalStatements: false
  InCStyleCasts: false
  InEmptyParentheses: false
  Other: false
SpacesInSquareBrackets: false
VerilogBreakBetweenInstancePorts: true

# JSON stuff
BreakArrays: false
SpaceBeforeJsonColon: false

# Macro stuff, don't need to touch this (yet?)
# MacroBlockBegin: ""
# MacroBlockEnd: ""
# Macros: []
# IfMacros: []
# ForEachMacros: []
# TypenameMacros: []
# AttributeMacros: []
# NamespaceMacros: []
# StatementMacros: [] # Could be useful for Qt (Q_OBJECT, Q_PROPERTY, Q_UNUSED, etc.)
# StatementAttributeLikeMacros: [] # Could be useful for Qt (emit, slots, signals, etc.)
# WhitespaceSensitiveMacros: []

# Penalty stuff, not sure how to use this yet
# PenaltyBreakAssignment: 0
# PenaltyBreakBeforeFirstCallParameter: 0
# PenaltyBreakComment: 0
# PenaltyBreakFirstLessLess: 0
# PenaltyBreakOpenParenthesis: 0
# PenaltyBreakString: 0
# PenaltyVreakTemplateDeclaration: 0
# PenaltyExcessCharacter: 0
# PenaltyIndentedWhitespace: 0
# PenaltyReturnTypeOnItsOwnLine: 0
---

